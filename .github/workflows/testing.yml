name: Test

on:
  push:
    branches: 
      - develop
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [develop,main]
    paths-ignore:
      - '**.md'
env:
  NODE_ENV: test
  TEST_DATABASE_URL: postgres://thunder_user:58hAIQS77klG6uZf58NceFDV57btJN1J@dpg-ce2cksg2i3mkuc8r036g-a.oregon-postgres.render.com/hr_app_test?sslmode=verify-ca


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '19.x'

      # - name: Start PostgreSQL container
      #   uses: docker/compose@v2
      #   with:
      #     compose-file: docker-compose.yml
      #     project-name: postgres
      #     service-ports: 5432:5432
      - uses: actions/checkout@v2
      - name: Build the stack
        run: docker-compose up -d

      - name: Wait for 1 minutes
        run: sleep 60

      - name: Install dependencies
        run: npm install
      # - name: Run tests and generate coverage report
      #   env:
      #     NODE_ENV: test
      #     CI: true
      #     TEST_DATABASE_URL: postgres://thunder_user:58hAIQS77klG6uZf58NceFDV57btJN1J@dpg-ce2cksg2i3mkuc8r036g-a.oregon-postgres.render.com/thunder?sslmode=verify-ca

      #   run: | 
      #     env  TEST_DATABASE_URL: "postgres://thunder_user:58hAIQS77klG6uZf58NceFDV57btJN1J@dpg-ce2cksg2i3mkuc8r036g-a.oregon-postgres.render.com/thunder?sslmode=verify-ca" 
      #     yarn test:coverage

          
      # - name: Upload coverage report to Coveralls
      #   # uses: coverallsapp/github-action@v2.2.0
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
      #     path-to-lcov: ./coverage/lcov.info
      # - name: Coveralls Finished
      #   run: env GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} yarn coverage --if-present